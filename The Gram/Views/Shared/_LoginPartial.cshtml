@using Microsoft.AspNetCore.Identity
@using The_Gram.Data.Models;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


    @{
var user = await UserManager.GetUserAsync(User);
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
            <li class="nav-item">
            <a class="nav-link text-dark" asp-action="Account" asp-controller="User" asp-route-id ="@user.Id"><img class="rounded-circle shadow-4-strong" src=@user.Picture height="24" alt="Hello, @user?.FullName!"/></a>
        </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="" asp-controller="User" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
    @if (User.IsInRole("User"))
        {
            <li class="nav-item">
            <form class="form-inline" >
                    <a class="nav-link btn btn-link text-dark" asp-area="" asp-controller="Admin" asp-action="Become">Become Admin</a>
            </form>
        </li>
        }
        
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
        </li>
    <li class="nav-item">
        <a class="nav-link" asp-area = "" asp-controller="User" asp-action="Login">Login</a>
    </li>
}
</ul>
